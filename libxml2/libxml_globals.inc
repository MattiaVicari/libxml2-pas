{$PACKRECORDS C}

{
   globals.h: interface for all global variables of the library
  
   The bottom of this file is automatically generated by build_glob.py
   based on the description file global.data
  
   See Copyright for the status of this software.
  
   Gary Pennington <Gary.Pennington@uk.sun.com>
   daniel@veillard.com
  }
{$ifndef __XML_GLOBALS_H}
{$define __XML_GLOBALS_H}
{$include <libxml/parser.h>}
{$include <libxml/xmlerror.h>}
{$include <libxml/SAX.h>}
{ C++ extern C conditionnal removed }
{
   Externally global symbols which need to be protected for backwards
   compatibility support.
  }
{$undef	docbDefaultSAXHandler}
{$undef	htmlDefaultSAXHandler}
{$undef	oldXMLWDcompatibility}
{$undef	xmlBufferAllocScheme}
{$undef	xmlDefaultBufferSize}
{$undef	xmlDefaultSAXHandler}
{$undef	xmlDefaultSAXLocator}
{$undef	xmlDoValidityCheckingDefaultValue}
{$undef	xmlFree}
{$undef	xmlGenericError}
{$undef	xmlGenericErrorContext}
{$undef	xmlGetWarningsDefaultValue}
{$undef	xmlIndentTreeOutput}
{$undef	xmlKeepBlanksDefaultValue}
{$undef	xmlLineNumbersDefaultValue}
{$undef	xmlLoadExtDtdDefaultValue}
{$undef	xmlMalloc}
{$undef	xmlMemStrdup}
{$undef	xmlParserDebugEntities}
{$undef	xmlParserVersion}
{$undef	xmlPedanticParserDefaultValue}
{$undef	xmlRealloc}
{$undef	xmlSaveNoEmptyTags}
{$undef	xmlSubstituteEntitiesDefaultValue}
type
   _xmlGlobalState = xmlGlobalState;

   xmlGlobalStatePtr = xmlGlobalState;
(* Const before type ignored *)
   _xmlGlobalState = record
        xmlParserVersion : ^char;
        xmlDefaultSAXLocator : xmlSAXLocator;
        xmlDefaultSAXHandler : xmlSAXHandler;
        docbDefaultSAXHandler : xmlSAXHandler;
        htmlDefaultSAXHandler : xmlSAXHandler;
        xmlFree : xmlFreeFunc;
        xmlMalloc : xmlMallocFunc;
        xmlMemStrdup : xmlStrdupFunc;
        xmlRealloc : xmlReallocFunc;
        xmlGenericError : xmlGenericErrorFunc;
        xmlGenericErrorContext : pointer;
        oldXMLWDcompatibility : longint;
        xmlBufferAllocScheme : xmlBufferAllocationScheme;
        xmlDefaultBufferSize : longint;
        xmlSubstituteEntitiesDefaultValue : longint;
        xmlDoValidityCheckingDefaultValue : longint;
        xmlGetWarningsDefaultValue : longint;
        xmlKeepBlanksDefaultValue : longint;
        xmlLineNumbersDefaultValue : longint;
        xmlLoadExtDtdDefaultValue : longint;
        xmlParserDebugEntities : longint;
        xmlPedanticParserDefaultValue : longint;
        xmlSaveNoEmptyTags : longint;
        xmlIndentTreeOutput : longint;
     end;


procedure xmlInitializeGlobalState(gs:xmlGlobalStatePtr);cdecl;external;
{
   In general the memory allocation entry points are not kept
   thread specific but this can be overridden by LIBXML_THREAD_ALLOC_ENABLED
      - xmlMalloc
      - xmlRealloc
      - xmlMemStrdup
      - xmlFree
  }
{$ifdef LIBXML_THREAD_ALLOC_ENABLED}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlMalloc:^xmlMallocFunc;cdecl;external;
(* error 
#define xmlMalloc \
in define line 105 *)
(* error 
(*(__xmlMalloc()))
{$else}
in declaration at line 108 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlRealloc:^xmlReallocFunc;cdecl;external;
(* error 
#define xmlRealloc \
in define line 113 *)
(* error 
(*(__xmlRealloc()))
{$else}
in declaration at line 116 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlFree:^xmlFreeFunc;cdecl;external;
(* error 
#define xmlFree \
in define line 121 *)
(* error 
(*(__xmlFree()))
{$else}
in declaration at line 124 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlMemStrdup:^xmlStrdupFunc;cdecl;external;
(* error 
#define xmlMemStrdup \
in define line 129 *)
(* error 
(*(__xmlMemStrdup()))
{$else}
in declaration at line 132 *)
{$endif}
{$else}
    { !LIBXML_THREAD_ALLOC_ENABLED  }
(* error 
LIBXML_DLL_IMPORT extern xmlMallocFunc xmlMalloc;
in declaration at line 135 *)
(* error 
LIBXML_DLL_IMPORT extern xmlReallocFunc xmlRealloc;
in declaration at line 136 *)
(* error 
LIBXML_DLL_IMPORT extern xmlFreeFunc xmlFree;
in declaration at line 137 *)
(* error 
LIBXML_DLL_IMPORT extern xmlStrdupFunc xmlMemStrdup;
in declaration at line 138 *)
{$endif}
    { LIBXML_THREAD_ALLOC_ENABLED  }
    {
       Everything starting from the line below is
       Automatically generated by build_glob.py.
       Do not modify the previous line.
      }
{$ifdef LIBXML_THREAD_ENABLED}

function __docbDefaultSAXHandler:^xmlSAXHandler;cdecl;external;
(* error 
#define docbDefaultSAXHandler \
in define line 150 *)
(* error 
(*(__docbDefaultSAXHandler()))
{$else}
in declaration at line 153 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __htmlDefaultSAXHandler:^xmlSAXHandler;cdecl;external;
(* error 
#define htmlDefaultSAXHandler \
in define line 158 *)
(* error 
(*(__htmlDefaultSAXHandler()))
{$else}
in declaration at line 161 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __oldXMLWDcompatibility:^longint;cdecl;external;
(* error 
#define oldXMLWDcompatibility \
in define line 166 *)
(* error 
(*(__oldXMLWDcompatibility()))
{$else}
in declaration at line 169 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlBufferAllocScheme:^xmlBufferAllocationScheme;cdecl;external;
(* error 
#define xmlBufferAllocScheme \
in define line 174 *)
(* error 
(*(__xmlBufferAllocScheme()))
{$else}
in declaration at line 177 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlDefaultBufferSize:^longint;cdecl;external;
(* error 
#define xmlDefaultBufferSize \
in define line 182 *)
(* error 
(*(__xmlDefaultBufferSize()))
{$else}
in declaration at line 185 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlDefaultSAXHandler:^xmlSAXHandler;cdecl;external;
(* error 
#define xmlDefaultSAXHandler \
in define line 190 *)
(* error 
(*(__xmlDefaultSAXHandler()))
{$else}
in declaration at line 193 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlDefaultSAXLocator:^xmlSAXLocator;cdecl;external;
(* error 
#define xmlDefaultSAXLocator \
in define line 198 *)
(* error 
(*(__xmlDefaultSAXLocator()))
{$else}
in declaration at line 201 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlDoValidityCheckingDefaultValue:^longint;cdecl;external;
(* error 
#define xmlDoValidityCheckingDefaultValue \
in define line 206 *)
(* error 
(*(__xmlDoValidityCheckingDefaultValue()))
{$else}
in declaration at line 209 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlGenericError:^xmlGenericErrorFunc;cdecl;external;
(* error 
#define xmlGenericError \
in define line 214 *)
(* error 
(*(__xmlGenericError()))
{$else}
in declaration at line 217 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlGenericErrorContext:^pointer;cdecl;external;
(* error 
#define xmlGenericErrorContext \
in define line 222 *)
(* error 
(*(__xmlGenericErrorContext()))
{$else}
in declaration at line 225 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlGetWarningsDefaultValue:^longint;cdecl;external;
(* error 
#define xmlGetWarningsDefaultValue \
in define line 230 *)
(* error 
(*(__xmlGetWarningsDefaultValue()))
{$else}
in declaration at line 233 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlIndentTreeOutput:^longint;cdecl;external;
(* error 
#define xmlIndentTreeOutput \
in define line 238 *)
(* error 
(*(__xmlIndentTreeOutput()))
{$else}
in declaration at line 241 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlKeepBlanksDefaultValue:^longint;cdecl;external;
(* error 
#define xmlKeepBlanksDefaultValue \
in define line 246 *)
(* error 
(*(__xmlKeepBlanksDefaultValue()))
{$else}
in declaration at line 249 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlLineNumbersDefaultValue:^longint;cdecl;external;
(* error 
#define xmlLineNumbersDefaultValue \
in define line 254 *)
(* error 
(*(__xmlLineNumbersDefaultValue()))
{$else}
in declaration at line 257 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlLoadExtDtdDefaultValue:^longint;cdecl;external;
(* error 
#define xmlLoadExtDtdDefaultValue \
in define line 262 *)
(* error 
(*(__xmlLoadExtDtdDefaultValue()))
{$else}
in declaration at line 265 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlParserDebugEntities:^longint;cdecl;external;
(* error 
#define xmlParserDebugEntities \
in define line 270 *)
(* error 
(*(__xmlParserDebugEntities()))
{$else}
in declaration at line 273 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}
(* Const before type ignored *)

function __xmlParserVersion:^^char;cdecl;external;
(* error 
#define xmlParserVersion \
in define line 278 *)
(* error 
(*(__xmlParserVersion()))
{$else}
in declaration at line 281 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlPedanticParserDefaultValue:^longint;cdecl;external;
(* error 
#define xmlPedanticParserDefaultValue \
in define line 286 *)
(* error 
(*(__xmlPedanticParserDefaultValue()))
{$else}
in declaration at line 289 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlSaveNoEmptyTags:^longint;cdecl;external;
(* error 
#define xmlSaveNoEmptyTags \
in define line 294 *)
(* error 
(*(__xmlSaveNoEmptyTags()))
{$else}
in declaration at line 297 *)
{$endif}
{$ifdef LIBXML_THREAD_ENABLED}

function __xmlSubstituteEntitiesDefaultValue:^longint;cdecl;external;
(* error 
#define xmlSubstituteEntitiesDefaultValue \
in define line 302 *)
(* error 
(*(__xmlSubstituteEntitiesDefaultValue()))
{$else}
in declaration at line 305 *)
{$endif}
{ C++ end of extern C conditionnal removed }
{$endif}
    { __XML_GLOBALS_H  }

